trigger:
  branches:
    include:
      - development
  paths:
    include:
      - implementations/vidchain-health-center/vidchain-health-center-backend

pr: none

resources:
- repo: self

variables:
  # Docker Buildkit improves image build performance
  DOCKER_BUILDKIT: 1
  # Image repository
  healthCenterBackendRepo: 'health-center-backend'
  healthCenterBackendRepoEndpoint: 'k8scrvidchaindev.azurecr.io/health-center-backend'
  # Dockerfiles
  healthCenterBackendDocker: 'implementations/vidchain-health-center/vidchain-health-center-backend/Dockerfile'
  # Kubernetes YAML
  healthCenterBackendKubernetes: 'implementations/vidchain-health-center/vidchain-health-center-backend/k8s/k8s-dev.yml'
  # Configmaps
  healthCenterBackendConfigMap: 'implementations/vidchain-health-center/vidchain-health-center-backend/k8s/configmap-dev.yml'
  # Kubernetes namespace
  namespace: 'development'
  # Image tagging: application version - build
  taghHealthCenterBackend: '$(Build.BuildNumber)'
  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  
stages:
- stage: Build
  displayName: 'Build stage'
  jobs:
  - job: GetShortCommit
    displayName: 'retrieve commit hash'
    pool:
      vmImage: $(vmImageName)
    steps:
    - script: |
        commit=$(Build.SourceVersion)
        shortCommit=${commit:0:7}
        echo "##vso[build.updatebuildnumber]$(Build.BuildId)-commit.$shortCommit"
      displayName: 'retrieve $(packageJson) version'
  - job: BuildHealthCenterBackend
    displayName: 'Build Health Center Backend'
    dependsOn: GetShortCommit
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Login ACR
      inputs:
        command: login
        containerRegistry: $(dockerRegistryServiceConnection)
    - script: "docker pull $(healthCenterBackendRepoEndpoint):latest"
      displayName: Pull latest for layer caching
      continueOnError: true # for first build, no cache
    - task: Docker@2
      displayName: "build --cache-from=$(healthCenterBackendRepoEndpoint):latest"
      inputs:
        containerRegistry: '$(dockerRegistryServiceConnection)'
        repository: '$(healthCenterBackendRepo)'
        command: 'build'
        Dockerfile: $(healthCenterBackendDocker)
        arguments: '--cache-from=$(healthCenterBackendRepoEndpoint):latest' 
        tags: |
          $(tagHealthCenterBackend)
          latest
    - task: Docker@2
      displayName: "push"
      inputs:
        command: push
        containerRegistry: "$(dockerRegistryServiceConnection)"
        repository: $(healthCenterBackendRepo) 
        tags: |
          $(tagHealthCenterBackend)
          latest
- stage: Deploy
  displayName: 'Deploy stage'
  dependsOn: Build
  jobs:
  - deployment: DeployHealthCenterBackend
    displayName: 'Deploy Health Center Backend'
    pool:
      vmImage: $(vmImageName)
    environment: 'development'
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
          - task: Kubernetes@1
            displayName: Create/update configmap
            inputs:
              connectionType: Azure Resource Manager
              azureSubscriptionEndpoint: $(azureSubscriptionEndpoint) 
              azureResourceGroup: $(azureResourceGroup)
              kubernetesCluster: $(kubernetesCluster)
              command: apply
              arguments: -f $(healthCenterBackendConfigMap) -n $(namespace)
          - task: KubernetesManifest@0
            displayName: Create/update deployment
            inputs:              
              kubernetesServiceConnection: $(kubernetesServiceConnection)
              namespace: $(namespace)
              manifests: $(healthCenterBackendKubernetes)
              containers: |
                $(healthCenterBackendRepoEndpoint):$(tagHealthCenterBackend)